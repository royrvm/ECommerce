@model ECommerce.Common.Models.Order



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <link href="https://gitcdn.github.io/bootstrap-toggle/2.2.2/css/bootstrap-toggle.min.css" rel="stylesheet">
    <script src="https://gitcdn.github.io/bootstrap-toggle/2.2.2/js/bootstrap-toggle.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js"></script>

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.CompanyId)
        @Html.HiddenFor(model => model.StateId)
        @Html.HiddenFor(model => model.WarehouseId)
        @Html.HiddenFor(model => model.UserName)

        <div class="form-group">
            @Html.LabelFor(model => model.CustomerId, "CustomerId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CustomerId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CustomerId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class='input-group date' id='datepicker' style="width:280px">
                    @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Period, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Period, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Period, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BorrowedCapital, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" id="borrowedCapital">
                @Html.EditorFor(model => model.BorrowedCapital, new {htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BorrowedCapital, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Interest, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" id="interest">
                @Html.EditorFor(model => model.Interest, new {htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Interest, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Total, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" id="total">
                @Html.EditorFor(model => model.Total, new {htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Total, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DailyPayment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" id="dailyPayment">
                @Html.EditorFor(model => model.DailyPayment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DailyPayment, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OperatingExpenses, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" id="operatingExpenses">
                @Html.EditorFor(model => model.OperatingExpenses, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OperatingExpenses, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
                @Html.ActionLink("Back to List", "Index")
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">

        $(function () {
            $('#datepicker').datetimepicker({ format: 'DD/MM/YYYY' });
        });


        $(document).ready(function () {
            $("#borrowedCapita").keyup(function () {
                var borrowedCapital = parseFloat($(this).val());
                var interest = parseFloat($("#interest").val());
                var total = (borrowedCapital * (interest / 100)) + borrowedCapital;
                var dailyPayment = borrowedCapital / 20;
                var operatingExpenses = borrowedCapital / 50;

                $("#total").val(total);
                $("#balance").val(total);
                $("#dailyPayment").val(dailyPayment);
                $("#operatingExpenses").val(operatingExpenses);
            });
        });
        $(document).ready(function () {
            $("#interest").keyup(function () {
                var borrowedCapital = parseFloat($("#borrowedCapital").val());
                var interest = parseFloat($(this).val());
                var total = (borrowedCapital * (interest / 100)) + borrowedCapital;
                var dailyPayment = borrowedCapital / 20;
                var operatingExpenses = borrowedCapital / 50;

                $("#total").val(total);
                $("#balance").val(total);
                $("#dailyPayment").val(dailyPayment);
                $("#operatingExpenses").val(operatingExpenses);
            });
        });

        $(document).ready(function () {
            $("#period").keyup(function () {

            });
        });
    </script>
}
